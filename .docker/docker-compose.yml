version: '3'

services:
  api-db:
    image: postgres
    hostname: postgres
    container_name: 'api-db'
    ports:
      - '5432:5432'
    volumes:
      - pgdata_api:/var/lib/postgresql/data
      - pgconf_api:/etc/postgresql
      - pglog_api:/var/log/postgresql
    env_file:
     - ~/.env/api-db.env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    hostname: "rabbit"
    env_file:
     - ~/.env/rabbitmq.env
    ports:
      - '15672:15672'
      - '5672:5672'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # api
  api:
    image: bsa2020knewless/dockerhub:api
    container_name: api
    depends_on:
      - api-db
      - rabbitmq
      - elasticsearch
    ports:
      - '5000:5000'
    volumes:
      - /knewless/assets:/knewless/assets
    env_file:
      - ~/.env/api.env
    environment:
      WAIT_HOSTS: rabbitmq:5672, api-db:5432, elasticsearch:9200
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  #PushService
  push:
    image: bsa2020knewless/dockerhub:push
    container_name: push
    depends_on:
      - rabbitmq
    ports:
      - '3003:3003'
    env_file:
      - ~/.env/push.env
    environment:
      WAIT_HOSTS: rabbitmq:5672
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # fileprocessor
  fileprocessor:
    image: bsa2020knewless/dockerhub:fileprocessor
    container_name: fileprocessor
    depends_on:
      - api-db
      - rabbitmq
    ports:
      - '5010:5010'
    volumes:
      - /knewless/assets:/knewless/assets
    env_file:
      - ~/.env/fileprocessor.env
    environment:
      WAIT_HOSTS: rabbitmq:5672, api-db:5432, api:5000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # emailsender
  emailsender:
    image: bsa2020knewless/dockerhub:emailsender
    container_name: emailsender
    depends_on:
      - rabbitmq
    env_file:
    - ~/.env/emailsender.env
    environment:
      WAIT_HOSTS: rabbitmq:5672
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Frontend
  client:
    image: bsa2020knewless/dockerhub:client
    container_name: client
    depends_on:
      - api
      - push
    ports:
      - '80:80'
      - '443:443'
    env_file:
      - ~/.env/client.env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - /data/certs:/etc/nginx/certs
      - /knewless/assets:/knewless/assets
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/dhparam.pem:/etc/nginx/dhparam.pem
      - /etc/letsencrypt/live/knewless.tk/cert.pem:/etc/letsencrypt/live/knewless.tk/cert.pem
      - /etc/letsencrypt/live/knewless.tk/chain.pem:/etc/letsencrypt/live/knewless.tk/chain.pem
      - /etc/letsencrypt/live/knewless.tk/fullchain.pem:/etc/letsencrypt/live/knewless.tk/fullchain.pem
      - /etc/letsencrypt/live/knewless.tk/privkey.pem:/etc/letsencrypt/live/knewless.tk/privkey.pem

  #  Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    env_file:
      - ~/.env/elastic.env
    volumes:
      - esdata:/elasticsearch/data
    ports:
      - 9200:9200

volumes:
  esdata:
    driver: local
  pgdata_api:
    driver: local
  pgconf_api:
    driver: local
  pglog_api:
    driver: local
  shared:
    driver: local
