plugins {
	id "org.springframework.boot" version "2.3.2.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "java"
	id "org.flywaydb.flyway" version "6.4.2"
	id "io.swagger.core.v3.swagger-gradle-plugin" version "2.1.4"
}

group = "com.knewless"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	def mapstruct = "1.3.1.Final"
	def jjwt = "0.10.5"

	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "io.jsonwebtoken:jjwt-api:${jjwt}"
	implementation "io.jsonwebtoken:jjwt-impl:${jjwt}"
	implementation "org.springframework.data:spring-data-elasticsearch"
	implementation "io.jsonwebtoken:jjwt-jackson:${jjwt}"
	implementation "org.springframework.boot:spring-boot-starter-amqp"
	implementation "org.springframework.kafka:spring-kafka"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "javax.validation:validation-api:2.0.1.Final"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-websocket"
	implementation "org.flywaydb:flyway-core"
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation "org.mapstruct:mapstruct:${mapstruct}"
	implementation "org.apache.commons:commons-lang3:3.11"
	// https://mvnrepository.com/artifact/com.google.apis/google-api-services-youtube
	compile group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev222-1.25.0'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	compileOnly "org.projectlombok:lombok"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "org.postgresql:postgresql"
	annotationProcessor "org.projectlombok:lombok"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testImplementation "com.h2database:h2"
	testImplementation "org.springframework.kafka:spring-kafka-test"
}

test {
	useJUnitPlatform()
}

flyway {
	url = "jdbc:postgresql://localhost:5432/knewless"
	user = "postgres"
	password = "admin"
}
